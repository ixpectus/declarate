- variables:
    cmd: "./build/main"

- name: test dry run for directory
  shell_cmd: | 
    {{$cmd}} -dryRun -dir ./tests/yaml
  shell_response: |
    tests to run
    ./tests/yaml/config.yaml
    ./tests/yaml/db.yaml
    ./tests/yaml/nested/nested.yaml
    ./tests/yaml/req.yaml
    ./tests/yaml/shell.yaml

- name: test dry run for single file
  shell_cmd: | 
    {{$cmd}} -dryRun -dir ./tests/yaml/req.yaml
  shell_response: |
    tests to run
    ./tests/yaml/req.yaml

- name: test dry run for directory with skipped files
  shell_cmd: | 
     {{$cmd}} -dryRun -dir ./tests/yaml  -s req.yaml -s db.yaml
  shell_response: |
    tests to run
    ./tests/yaml/config.yaml
    ./tests/yaml/nested/nested.yaml
    ./tests/yaml/shell.yaml

- name: test requests success
  shell_cmd: | 
    {{$cmd}} -dir ./tests/yaml/req.yaml
  shell_response: |
    passed ./tests/yaml/req.yaml:set variables
    passed ./tests/yaml/req.yaml:check request
    passed ./tests/yaml/req.yaml:check request

- name: test requests faile with wrong status
  shell_cmd: | 
    {{$cmd}} -dir ./tests/yaml_failed/req_status.yaml
  shell_response: |
    passed ./tests/yaml_failed/req_status.yaml:set variables
    failed ./tests/yaml_failed/req_status.yaml:check request
    response differs: 
    status differs, expected 201, got 200

    expected response: 
    {"body":{"age":28,"items":[1,2,3,4],"name":"Tom"},"status":200}
    actual response: 
    {"body":{"age":28,"items":[1,2,3,4],"name":"Tom"},"status":201}


- name: test requests fail, wrong value in map
  shell_cmd: | 
    {{$cmd}} -dir ./tests/yaml_failed/req_map.yaml
  shell_response: |
    failed ./tests/yaml_failed/req_map.yaml:check request fail map
    response differs: 
    at path $.name values do not match:
    expected:
    Tom1
    actual:
    Tom

    expected response: 
    {"age":28,"items":[1,2,3,4],"name":"Tom1"}
    actual response: 
    {"age":28,"items":[1,2,3,4],"name":"Tom"}



- name: test requests fail, wrong value in array
  shell_cmd: | 
    {{$cmd}} -dir ./tests/yaml_failed/req_array.yaml
  shell_response: |
    failed ./tests/yaml_failed/req_array.yaml:check request fail map
    response differs: 
    at path $.items array lengths do not match:
    expected:
    3
    actual:
    4

    expected response: 
    {"age":28,"items":[1,3,4],"name":"Tom"}
    actual response: 
    {"age":28,"items":[1,2,3,4],"name":"Tom"}




- name: test db success
  shell_cmd: | 
    {{$cmd}} -dir ./tests/yaml/db.yaml
  shell_response: |
    passed ./tests/yaml/db.yaml:set variables
    start ./tests/yaml/db.yaml:create and populate table
     passed ./tests/yaml/db.yaml:tear up, drop table
     passed ./tests/yaml/db.yaml:create table
     passed ./tests/yaml/db.yaml:populate with data
     passed ./tests/yaml/db.yaml:get count
     passed ./tests/yaml/db.yaml:get count 2
    passed ./tests/yaml/db.yaml:create and populate table
    passed ./tests/yaml/db.yaml:check values in table

    echo 1 
    passed ./tests/yaml/db.yaml:show count plain

    echo 1 
    passed ./tests/yaml/db.yaml:show count
    passed ./tests/yaml/db.yaml:drop table


- name: test poll success
  shell_cmd: | 
    {{$cmd}} -dir ./tests/yaml_poll/poll.yaml
  shell_response: |
    start ./tests/yaml_poll/poll.yaml:check poll handler
    poll ./tests/yaml_poll/poll.yaml:check poll handler, wait 10ms, estimated 0s
    poll ./tests/yaml_poll/poll.yaml:check poll handler, wait 10ms, estimated 0s
    poll ./tests/yaml_poll/poll.yaml:check poll handler, wait 10ms, estimated 0s
    poll ./tests/yaml_poll/poll.yaml:check poll handler, wait 10ms, estimated 0s
    poll ./tests/yaml_poll/poll.yaml:check poll handler, wait 10ms, estimated 0s
    poll ./tests/yaml_poll/poll.yaml:check poll handler, wait 10ms, estimated 0s
    poll ./tests/yaml_poll/poll.yaml:check poll handler, wait 10ms, estimated 0s
    poll ./tests/yaml_poll/poll.yaml:check poll handler, wait 10ms, estimated 0s
    passed ./tests/yaml_poll/poll.yaml:check poll handler
    start ./tests/yaml_poll/poll.yaml:check poll handler with regexp success
    poll ./tests/yaml_poll/poll.yaml:check poll handler with regexp success, wait 10ms, estimated 0s
    poll ./tests/yaml_poll/poll.yaml:check poll handler with regexp success, wait 10ms, estimated 0s
    poll ./tests/yaml_poll/poll.yaml:check poll handler with regexp success, wait 10ms, estimated 0s
    poll ./tests/yaml_poll/poll.yaml:check poll handler with regexp success, wait 10ms, estimated 0s
    poll ./tests/yaml_poll/poll.yaml:check poll handler with regexp success, wait 10ms, estimated 0s
    poll ./tests/yaml_poll/poll.yaml:check poll handler with regexp success, wait 10ms, estimated 0s
    poll ./tests/yaml_poll/poll.yaml:check poll handler with regexp success, wait 10ms, estimated 0s
    poll ./tests/yaml_poll/poll.yaml:check poll handler with regexp success, wait 10ms, estimated 0s
    passed ./tests/yaml_poll/poll.yaml:check poll handler with regexp success
    start ./tests/yaml_poll/poll.yaml:check poll handler with regexp success with response body
    poll ./tests/yaml_poll/poll.yaml:check poll handler with regexp success with response body, wait 10ms, estimated 0s
    poll ./tests/yaml_poll/poll.yaml:check poll handler with regexp success with response body, wait 10ms, estimated 0s
    poll ./tests/yaml_poll/poll.yaml:check poll handler with regexp success with response body, wait 10ms, estimated 0s
    poll ./tests/yaml_poll/poll.yaml:check poll handler with regexp success with response body, wait 10ms, estimated 0s
    at path $.body.name values do not match:
    expected:
    Tom
    actual:
    Tommy
     

- name: test tags, pass existing tags
  shell_cmd: | 
    {{$cmd}} -dir ./tests/yaml -tags "base,advanced" -dryRun
  shell_response: |
    tests to run
    ./tests/yaml/config.yaml
    ./tests/yaml/db.yaml
    ./tests/yaml/req.yaml

- name: test tags, pass one tag
  shell_cmd: |
    {{$cmd}} -dir ./tests/yaml -tags "base" -dryRun
  shell_response: |
    tests to run
    ./tests/yaml/config.yaml
    ./tests/yaml/db.yaml

- name: test tags, tests should be ordered by tags
  shell_cmd: | 
    {{$cmd}} -dir ./tests/yaml -tags "advanced,base" -dryRun
  shell_response: |
    tests to run
    ./tests/yaml/req.yaml
    ./tests/yaml/config.yaml
    ./tests/yaml/db.yaml
    
- name: test tags, nested directories
  shell_cmd: | 
    {{$cmd}} -dir ./tests/yaml -tags "tiny" -dryRun
  shell_response: |
    tests to run
    ./tests/yaml/nested/nested.yaml

- name: test pathes, pathes and tags
  shell_cmd: | 
    {{$cmd}} -dir ./tests/yaml -tags "base" -dryRun -tests req,nested
  shell_response: |
    tests to run
    ./tests/yaml/config.yaml
    ./tests/yaml/db.yaml
    ./tests/yaml/req.yaml
    ./tests/yaml/nested/nested.yaml

- name: test pathes, only pathes
  shell_cmd: | 
    {{$cmd}} -dir ./tests/yaml -dryRun -tests req,nested
  shell_response: |
    tests to run
    ./tests/yaml/req.yaml
    ./tests/yaml/nested/nested.yaml

- name: test script, success
  shell_cmd: | 
    {{$cmd}} -dir ./tests -tests yaml_script/script_success
  shell_response: |
    passed ./tests/yaml_script/script_success.yaml:set variables
    passed ./tests/yaml_script/script_success.yaml:script check

    echo reddy
     
    passed ./tests/yaml_script/script_success.yaml:check output
    passed ./tests/yaml_script/script_success.yaml:script check extended

    echo bobby
     
    passed ./tests/yaml_script/script_success.yaml:check output extended



- name: test eval 
  shell_cmd: | 
    {{$cmd}} -dir ./tests -tests yaml_variables
  shell_response: |
    passed ./tests/yaml_variables/eval.yaml:set variables

    echo Donny 
    passed ./tests/yaml_variables/eval.yaml:check echo

    echo 2 
    passed ./tests/yaml_variables/eval.yaml:check eval direct call

- name: test debug wrapper 
  shell_cmd: | 
    {{$cmd}} -dir ./tests -tests yaml_wrapper
  shell_response: |
    before test set variables
    after test set variables
    passed ./tests/yaml_wrapper/wrapper.yaml:set variables
    before test check request 2
    after test check request 2
    passed ./tests/yaml_wrapper/wrapper.yaml:check request 2
    before test nested steps
    start ./tests/yaml_wrapper/wrapper.yaml:nested steps
    before test step check request nested1
    after test step check request nested1
     passed ./tests/yaml_wrapper/wrapper.yaml:check request nested1
    before test step check request nested2
    after test step check request nested2
     passed ./tests/yaml_wrapper/wrapper.yaml:check request nested2
    after test nested steps
    passed ./tests/yaml_wrapper/wrapper.yaml:nested steps


- name: check conditions
  shell_cmd: | 
    {{$cmd}} -dir ./tests/yaml_definition/definition.yaml
  shell_response: |
    skipped for file ./tests/yaml_definition/definition.yaml: step should be skipped
    passed ./tests/yaml_definition/definition.yaml:step should not be skipped
    start ./tests/yaml_definition/definition.yaml:check steps behaviour
     skipped ./tests/yaml_definition/definition.yaml: step should be skipped in steps
     passed ./tests/yaml_definition/definition.yaml:step should not be skipped in steps
    passed ./tests/yaml_definition/definition.yaml:check steps behaviour


